---
image:
  # -- repository is the image repository to pull the image from
  repository: ghcr.io/infratographer/iam-runtime-infratographer
  # -- pullPolicy is the image pull policy for the service image
  pullPolicy: IfNotPresent
  # -- tag is the image tag to use. Defaults to the chart's app version
  tag: ""

config:
  jwt:
    # -- issuer Issuer to use for JWT validation.
    issuer: ""
    # -- jwksURI JWKS URI to use for JWT validation.
    jwksURI: ""
  permissions:
    # -- host permissions-api host to use.
    host: ""

    discovery:
      # -- disable SRV discovery.
      disable: false
      # -- interval to check for new SRV records.
      interval: 15m
      # -- quick doesn't wait for discovery and health checks to complete before selecting a host.
      quick: false
      # -- optional allows SRV records to be optional.
      # If no SRV records are found or all endpoints are unhealthy, the fallback host is used.
      optional: true
      # -- prefer sets the preferred SRV record. (skips priority, weight and duration ordering)
      prefer: ""
      # -- fallback sets the fallback address if no hosts are found or all hosts are unhealthy.
      # The default fallback host is the permissions.host value.
      fallback: ""
      check:
        # -- scheme sets the uri scheme. Default is http unless discovered port is 443 in which https will be used.
        scheme: ""
        # -- path is the uri path to fetch to check if host is healthy.
        path: /readyz
        # -- count is the number of checks to run on each host to check for connection latency.
        count: 5
        # -- interval is how frequent to check for healthiness on hosts.
        interval: 1m
        # -- delay is the delay between requests for a host.
        delay: 200ms
        # -- timeout sets the maximum amount of time a request can wait before canceling the request.
        timeout: 2s
        # -- concurrency is the number of hosts to concurrently check.
        concurrency: 5
  events:
    # -- enabled enables NATS event-based functions.
    enabled: false
    nats:
      # -- url NATS server url to use.
      url: ""
      # -- publishPrefix NATS publish prefix to use.
      publishPrefix: ""
      # -- publishTopic NATS publihs topic to use.
      publishTopic: ""
      # -- token NATS user token to use.
      token: ""
      # -- credsFile path to NATS credentials file
      credsFile: ""
  tracing:
    # -- enabled initializes otel tracing.
    enabled: false
    # -- url gRPC URL for OpenTelemetry collector.
    url: ""
    # -- insecure if TLS should be disabled.
    insecure: false
  accessTokenProvider:
    # -- enabled configures the access token source for GetAccessToken requests.
    enabled: false
    # -- (duration) expiryDelta sets early expiry validation for the token.
    # @default -- 10s
    expiryDelta: 0
    source:
      file:
        # -- tokenPath is the path to the source jwt token.
        tokenPath: ""
      clientCredentials:
        # -- issuer specifies the URL for the issuer for the token request.
        # The Issuer must support OpenID discovery to discover the token endpoint.
        issuer: ""
        # -- clientID is the client credentials id which is used to retrieve a token from the issuer.
        # This attribute also supports a file path by prefixing the value with `file://`.
        # example: `file:///var/secrets/client-id`
        clientID: ""
        # -- clientSecret is the client credentials secret which is used to retrieve a token from the issuer.
        # This attribute also supports a file path by prefixing the value with `file://`.
        # example: `file:///var/secrets/client-secret`
        clientSecret: ""
    exchange:
      # -- issuer specifies the URL for the issuer for the exchanged token.
      # The Issuer must support OpenID discovery to discover the token endpoint.
      issuer: ""
      # -- grantType configures the grant type
      # @default -- urn:ietf:params:oauth:grant-type:token-exchange
      grantType: ""
      # -- tokenType configures the token type
      # @default -- urn:ietf:params:oauth:token-type:jwt
      tokenType: ""

# -- restartPolicy set to Always if using with initContainers on kube 1.29 and up
# with the SideContainer feature flag enabled.
# ref: https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/#sidecar-containers-and-pod-lifecycle
restartPolicy: ""

# -- volumeMounts define additional volume mounts to include with the container
# ref: https://kubernetes.io/docs/concepts/storage/volumes/
volumeMounts: {}

# -- extraEnv defines additional environment variables to include with the container
# ref: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
extraEnv: {}

# -- resource limits & requests
# ref: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
resources: {}

# -- securityContext configures the container's security context.
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 65532
